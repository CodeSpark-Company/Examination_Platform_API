version: "3.8"

services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  api:
    container_name: api
    hostname: api
    restart: unless-stopped
    build:
      context: .
      dockerfile: api.Dockerfile
    env_file:
      - .env
    volumes:
      - static_data:/app/static
    expose:
      - 80
    ports:
      - "80:80"
    depends_on:
      - postgres
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn project.wsgi --bind 0.0.0.0:80 --reload"

  terminized:
    container_name: terminized
    hostname: terminized
    restart: unless-stopped
    build:
      context: .
      dockerfile: terminized.Dockerfile
    volumes:
      - template_data:/dockerized_terminal/templates
    expose:
      - 5000
    ports:
      - "5000:5000"
    command: bash -c "gunicorn --worker-class eventlet -w 1 app:app --bind 0.0.0.0:5000"

volumes:
  static_data: {}
  postgres_data: {}
  template_data: {}
